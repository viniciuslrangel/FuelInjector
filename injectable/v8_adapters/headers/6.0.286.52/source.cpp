// Generated by Fuel Injector header_generator
#include <Windows.h>
#include "v8.h"

extern HMODULE v8Module;


class v8::Maybe<bool> v8::Object::Has(class v8::Local<class v8::Context> param_0, unsigned int param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int)) GetProcAddress(v8Module, "?Has@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@I@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<enum v8::PropertyAttribute> v8::Object::GetRealNamedPropertyAttributesInPrototypeChain(class v8::Local<class v8::String> param_0) {
  static const auto target = (class v8::Maybe<enum v8::PropertyAttribute> (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?GetRealNamedPropertyAttributesInPrototypeChain@Object@v8@@QAE?AV?$Maybe@W4PropertyAttribute@v8@@@2@V?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

void v8::Context::SetSecurityToken(class v8::Local<class v8::Value> param_0) {
  static const auto target = (void (__thiscall*)(v8::Context*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?SetSecurityToken@Context@v8@@QAEXV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0);
}

unsigned int v8::Context::EstimatedSize() {
  static const auto target = (unsigned int (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?EstimatedSize@Context@v8@@QAEIXZ");
  return target(this);
}

class v8::Local<class v8::String> v8::String::NewFromUtf8(class v8::Isolate * param_0, char const * param_1, enum v8::String::NewStringType param_2, int param_3) {
  static const auto target = (class v8::Local<class v8::String> (__cdecl*)(class v8::Isolate *, char const *, enum v8::String::NewStringType, int)) GetProcAddress(v8Module, "?NewFromUtf8@String@v8@@SA?AV?$Local@VString@v8@@@2@PAVIsolate@2@PBDW4NewStringType@12@H@Z");
  return target(param_0, param_1, param_2, param_3);
}

void * v8::Object::SlowGetAlignedPointerFromInternalField(int param_0) {
  static const auto target = (void * (__thiscall*)(v8::Object*, int)) GetProcAddress(v8Module, "?SlowGetAlignedPointerFromInternalField@Object@v8@@AAEPAXH@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Object> v8::Object::Clone() {
  static const auto target = (class v8::Local<class v8::Object> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?Clone@Object@v8@@QAE?AV?$Local@VObject@v8@@@2@XZ");
  return target(this);
}

class v8::Maybe<bool> v8::Object::HasOwnProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?HasOwnProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<bool> v8::Object::DeletePrivate(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Private> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Private>)) GetProcAddress(v8Module, "?DeletePrivate@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VPrivate@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Local<class v8::Array> v8::Object::GetPropertyNames() {
  static const auto target = (class v8::Local<class v8::Array> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?GetPropertyNames@Object@v8@@QAE?AV?$Local@VArray@v8@@@2@XZ");
  return target(this);
}

bool v8::Object::SetAccessor(class v8::Local<class v8::String> param_0, void (__cdecl*param_1)(class v8::Local<class v8::String>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*param_2)(class v8::Local<class v8::String>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::Local<class v8::Value> param_3, enum v8::AccessControl param_4, enum v8::PropertyAttribute param_5) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::String>, void (__cdecl*)(class v8::Local<class v8::String>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*)(class v8::Local<class v8::String>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::Local<class v8::Value>, enum v8::AccessControl, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?SetAccessor@Object@v8@@QAE_NV?$Local@VString@v8@@@2@P6AX0ABV?$PropertyCallbackInfo@VValue@v8@@@2@@ZP6AX0V?$Local@VValue@v8@@@2@ABV?$PropertyCallbackInfo@X@2@@Z3W4AccessControl@2@W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2, param_3, param_4, param_5);
}

void v8::Object::SetAlignedPointerInInternalFields(int param_0, int * const param_1, void * * const param_2) {
  static const auto target = (void (__thiscall*)(v8::Object*, int, int * const, void * * const)) GetProcAddress(v8Module, "?SetAlignedPointerInInternalFields@Object@v8@@QAEXHQAHQAPAX@Z");
  return target(this, param_0, param_1, param_2);
}

bool v8::Object::HasIndexedLookupInterceptor() {
  static const auto target = (bool (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?HasIndexedLookupInterceptor@Object@v8@@QAE_NXZ");
  return target(this);
}

class v8::MaybeLocal<class v8::String> v8::Object::ObjectProtoToString(class v8::Local<class v8::Context> param_0) {
  static const auto target = (class v8::MaybeLocal<class v8::String> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>)) GetProcAddress(v8Module, "?ObjectProtoToString@Object@v8@@QAE?AV?$MaybeLocal@VString@v8@@@2@V?$Local@VContext@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Value> v8::TryCatch::StackTrace() const {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(const v8::TryCatch*)) GetProcAddress(v8Module, "?StackTrace@TryCatch@v8@@QBE?AV?$Local@VValue@v8@@@2@XZ");
  return target(this);
}

void v8::Object::SetInternalField(int param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (void (__thiscall*)(v8::Object*, int, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?SetInternalField@Object@v8@@QAEXHV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Value> v8::Object::GetOwnPropertyDescriptor(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?GetOwnPropertyDescriptor@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Value> v8::Object::GetRealNamedProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?GetRealNamedProperty@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<bool> v8::Object::SetPrototype(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?SetPrototype@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Value> v8::Function::Call(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1, int param_2, class v8::Local<class v8::Value> * const param_3) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Function*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>, int, class v8::Local<class v8::Value> * const)) GetProcAddress(v8Module, "?Call@Function@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@HQAV52@@Z");
  return target(this, param_0, param_1, param_2, param_3);
}

class v8::Local<class v8::Value> v8::Object::SlowGetInternalField(int param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, int)) GetProcAddress(v8Module, "?SlowGetInternalField@Object@v8@@AAE?AV?$Local@VValue@v8@@@2@H@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Value> v8::Object::GetRealNamedProperty(class v8::Local<class v8::String> param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?GetRealNamedProperty@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@V?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Context> v8::Context::New(class v8::Isolate * param_0, class v8::ExtensionConfiguration * param_1, class v8::MaybeLocal<class v8::ObjectTemplate> param_2, class v8::MaybeLocal<class v8::Value> param_3) {
  static const auto target = (class v8::Local<class v8::Context> (__cdecl*)(class v8::Isolate *, class v8::ExtensionConfiguration *, class v8::MaybeLocal<class v8::ObjectTemplate>, class v8::MaybeLocal<class v8::Value>)) GetProcAddress(v8Module, "?New@Context@v8@@SA?AV?$Local@VContext@v8@@@2@PAVIsolate@2@PAVExtensionConfiguration@2@V?$MaybeLocal@VObjectTemplate@v8@@@2@V?$MaybeLocal@VValue@v8@@@2@@Z");
  return target(param_0, param_1, param_2, param_3);
}

v8::TryCatch::TryCatch() {
  static const auto target = (void (__thiscall*)(v8::TryCatch*)) GetProcAddress(v8Module, "??0TryCatch@v8@@QAE@XZ");
  target(this);
}

class v8::Local<class v8::Object> v8::Context::GetExtrasBindingObject() {
  static const auto target = (class v8::Local<class v8::Object> (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?GetExtrasBindingObject@Context@v8@@QAE?AV?$Local@VObject@v8@@@2@XZ");
  return target(this);
}

v8::TryCatch::~TryCatch() {
  static const auto target = (void (__thiscall*)(v8::TryCatch*)) GetProcAddress(v8Module, "??1TryCatch@v8@@QAE@XZ");
  target(this);
}

class v8::MaybeLocal<class v8::Value> v8::Object::CallAsFunction(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1, int param_2, class v8::Local<class v8::Value> * const param_3) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>, int, class v8::Local<class v8::Value> * const)) GetProcAddress(v8Module, "?CallAsFunction@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@HQAV52@@Z");
  return target(this, param_0, param_1, param_2, param_3);
}

class v8::MaybeLocal<class v8::Value> v8::TryCatch::StackTrace(class v8::Local<class v8::Context> param_0) const {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(const v8::TryCatch*, class v8::Local<class v8::Context>)) GetProcAddress(v8Module, "?StackTrace@TryCatch@v8@@QBE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@@Z");
  return target(this, param_0);
}

bool v8::Object::HasRealNamedCallbackProperty(class v8::Local<class v8::String> param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?HasRealNamedCallbackProperty@Object@v8@@QAE_NV?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::internal::Object * * v8::HandleScope::CreateHandle(class v8::internal::HeapObject * param_0, class v8::internal::Object * param_1) {
  static const auto target = (class v8::internal::Object * * (__cdecl*)(class v8::internal::HeapObject *, class v8::internal::Object *)) GetProcAddress(v8Module, "?CreateHandle@HandleScope@v8@@CAPAPAVObject@internal@2@PAVHeapObject@42@PAV342@@Z");
  return target(param_0, param_1);
}

void v8::TryCatch::ResetInternal() {
  static const auto target = (void (__thiscall*)(v8::TryCatch*)) GetProcAddress(v8Module, "?ResetInternal@TryCatch@v8@@AAEXXZ");
  return target(this);
}

bool v8::Object::Set(unsigned int param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (bool (__thiscall*)(v8::Object*, unsigned int, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Set@Object@v8@@QAE_NIV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Array> v8::Object::GetOwnPropertyNames(class v8::Local<class v8::Context> param_0) {
  static const auto target = (class v8::MaybeLocal<class v8::Array> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>)) GetProcAddress(v8Module, "?GetOwnPropertyNames@Object@v8@@QAE?AV?$MaybeLocal@VArray@v8@@@2@V?$Local@VContext@v8@@@2@@Z");
  return target(this, param_0);
}

bool v8::Object::HasOwnProperty(class v8::Local<class v8::String> param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?HasOwnProperty@Object@v8@@QAE_NV?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

void v8::HandleScope::Initialize(class v8::Isolate * param_0) {
  static const auto target = (void (__thiscall*)(v8::HandleScope*, class v8::Isolate *)) GetProcAddress(v8Module, "?Initialize@HandleScope@v8@@IAEXPAVIsolate@2@@Z");
  return target(this, param_0);
}

void v8::Object::SetAlignedPointerInInternalField(int param_0, void * param_1) {
  static const auto target = (void (__thiscall*)(v8::Object*, int, void *)) GetProcAddress(v8Module, "?SetAlignedPointerInInternalField@Object@v8@@QAEXHPAX@Z");
  return target(this, param_0, param_1);
}

class v8::Local<class v8::UnboundScript> v8::Script::GetUnboundScript() {
  static const auto target = (class v8::Local<class v8::UnboundScript> (__thiscall*)(v8::Script*)) GetProcAddress(v8Module, "?GetUnboundScript@Script@v8@@QAE?AV?$Local@VUnboundScript@v8@@@2@XZ");
  return target(this);
}

bool v8::Object::Has(class v8::Local<class v8::Value> param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Has@Object@v8@@QAE_NV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0);
}

void v8::Context::UseDefaultSecurityToken() {
  static const auto target = (void (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?UseDefaultSecurityToken@Context@v8@@QAEXXZ");
  return target(this);
}

bool v8::Object::Set(class v8::Local<class v8::Value> param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Set@Object@v8@@QAE_NV?$Local@VValue@v8@@@2@0@Z");
  return target(this, param_0, param_1);
}

void v8::Context::DetachGlobal() {
  static const auto target = (void (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?DetachGlobal@Context@v8@@QAEXXZ");
  return target(this);
}

enum v8::PropertyAttribute v8::Object::GetPropertyAttributes(class v8::Local<class v8::Value> param_0) {
  static const auto target = (enum v8::PropertyAttribute (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?GetPropertyAttributes@Object@v8@@QAE?AW4PropertyAttribute@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Context> v8::Object::CreationContext() {
  static const auto target = (class v8::Local<class v8::Context> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?CreationContext@Object@v8@@QAE?AV?$Local@VContext@v8@@@2@XZ");
  return target(this);
}

class v8::Isolate * v8::Object::GetIsolate() {
  static const auto target = (class v8::Isolate * (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?GetIsolate@Object@v8@@QAEPAVIsolate@2@XZ");
  return target(this);
}

class v8::Maybe<enum v8::PropertyAttribute> v8::Object::GetRealNamedPropertyAttributes(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::Maybe<enum v8::PropertyAttribute> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?GetRealNamedPropertyAttributes@Object@v8@@QAE?AV?$Maybe@W4PropertyAttribute@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Value> v8::Object::CallAsConstructor(class v8::Local<class v8::Context> param_0, int param_1, class v8::Local<class v8::Value> * const param_2) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, int, class v8::Local<class v8::Value> * const)) GetProcAddress(v8Module, "?CallAsConstructor@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@HQAV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1, param_2);
}

class v8::Maybe<bool> v8::Object::HasRealNamedCallbackProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?HasRealNamedCallbackProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

void v8::V8::ToLocalEmpty() {
  static const auto target = (void (__cdecl*)()) GetProcAddress(v8Module, "?ToLocalEmpty@V8@v8@@CAXXZ");
  return target();
}

bool v8::Object::ForceSet(class v8::Local<class v8::Value> param_0, class v8::Local<class v8::Value> param_1, enum v8::PropertyAttribute param_2) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>, class v8::Local<class v8::Value>, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?ForceSet@Object@v8@@QAE_NV?$Local@VValue@v8@@@2@0W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2);
}

bool v8::Object::HasNamedLookupInterceptor() {
  static const auto target = (bool (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?HasNamedLookupInterceptor@Object@v8@@QAE_NXZ");
  return target(this);
}

v8::TryCatch::TryCatch(class v8::Isolate * param_0) {
  static const auto target = (void (__thiscall*)(v8::TryCatch*, class v8::Isolate *)) GetProcAddress(v8Module, "??0TryCatch@v8@@QAE@PAVIsolate@1@@Z");
  target(this, param_0);
}

v8::HandleScope::HandleScope(class v8::Isolate * param_0) {
  static const auto target = (void (__thiscall*)(v8::HandleScope*, class v8::Isolate *)) GetProcAddress(v8Module, "??0HandleScope@v8@@QAE@PAVIsolate@1@@Z");
  target(this, param_0);
}

void v8::Context::Exit() {
  static const auto target = (void (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?Exit@Context@v8@@QAEXXZ");
  return target(this);
}

class v8::Local<class v8::String> v8::Object::ObjectProtoToString() {
  static const auto target = (class v8::Local<class v8::String> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?ObjectProtoToString@Object@v8@@QAE?AV?$Local@VString@v8@@@2@XZ");
  return target(this);
}

class v8::Maybe<bool> v8::Object::DefineProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1, class v8::PropertyDescriptor & param_2) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>, class v8::PropertyDescriptor &)) GetProcAddress(v8Module, "?DefineProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@AAVPropertyDescriptor@2@@Z");
  return target(this, param_0, param_1, param_2);
}

class v8::Local<class v8::Value> v8::Object::Get(unsigned int param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, unsigned int)) GetProcAddress(v8Module, "?Get@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@I@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Array> v8::Object::GetOwnPropertyNames() {
  static const auto target = (class v8::Local<class v8::Array> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?GetOwnPropertyNames@Object@v8@@QAE?AV?$Local@VArray@v8@@@2@XZ");
  return target(this);
}

class v8::Local<class v8::Value> v8::Object::Get(class v8::Local<class v8::Value> param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Get@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@V32@@Z");
  return target(this, param_0);
}

class v8::Maybe<bool> v8::Object::SetPrivate(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Private> param_1, class v8::Local<class v8::Value> param_2) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Private>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?SetPrivate@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VPrivate@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1, param_2);
}

bool v8::Object::IsConstructor() {
  static const auto target = (bool (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?IsConstructor@Object@v8@@QAE_NXZ");
  return target(this);
}

class v8::Local<class v8::Object> v8::Object::FindInstanceInPrototypeChain(class v8::Local<class v8::FunctionTemplate> param_0) {
  static const auto target = (class v8::Local<class v8::Object> (__thiscall*)(v8::Object*, class v8::Local<class v8::FunctionTemplate>)) GetProcAddress(v8Module, "?FindInstanceInPrototypeChain@Object@v8@@QAE?AV?$Local@VObject@v8@@@2@V?$Local@VFunctionTemplate@v8@@@2@@Z");
  return target(this, param_0);
}

void * v8::Context::SlowGetAlignedPointerFromEmbedderData(int param_0) {
  static const auto target = (void * (__thiscall*)(v8::Context*, int)) GetProcAddress(v8Module, "?SlowGetAlignedPointerFromEmbedderData@Context@v8@@AAEPAXH@Z");
  return target(this, param_0);
}

bool v8::Object::HasRealIndexedProperty(unsigned int param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, unsigned int)) GetProcAddress(v8Module, "?HasRealIndexedProperty@Object@v8@@QAE_NI@Z");
  return target(this, param_0);
}

int v8::Object::GetIdentityHash() {
  static const auto target = (int (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?GetIdentityHash@Object@v8@@QAEHXZ");
  return target(this);
}

class v8::MaybeLocal<class v8::Script> v8::Script::Compile(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::String> param_1, class v8::ScriptOrigin * param_2) {
  static const auto target = (class v8::MaybeLocal<class v8::Script> (__cdecl*)(class v8::Local<class v8::Context>, class v8::Local<class v8::String>, class v8::ScriptOrigin *)) GetProcAddress(v8Module, "?Compile@Script@v8@@SA?AV?$MaybeLocal@VScript@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VString@v8@@@2@PAVScriptOrigin@2@@Z");
  return target(param_0, param_1, param_2);
}

class v8::Maybe<bool> v8::Object::SetIntegrityLevel(class v8::Local<class v8::Context> param_0, enum v8::IntegrityLevel param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, enum v8::IntegrityLevel)) GetProcAddress(v8Module, "?SetIntegrityLevel@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@W4IntegrityLevel@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<bool> v8::Object::SetAccessor(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1, void (__cdecl*param_2)(class v8::Local<class v8::Name>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*param_3)(class v8::Local<class v8::Name>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::MaybeLocal<class v8::Value> param_4, enum v8::AccessControl param_5, enum v8::PropertyAttribute param_6) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>, void (__cdecl*)(class v8::Local<class v8::Name>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*)(class v8::Local<class v8::Name>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::MaybeLocal<class v8::Value>, enum v8::AccessControl, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?SetAccessor@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@P6AX1ABV?$PropertyCallbackInfo@VValue@v8@@@2@@ZP6AX1V?$Local@VValue@v8@@@2@ABV?$PropertyCallbackInfo@X@2@@ZV?$MaybeLocal@VValue@v8@@@2@W4AccessControl@2@W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2, param_3, param_4, param_5, param_6);
}

int v8::HandleScope::NumberOfHandles(class v8::Isolate * param_0) {
  static const auto target = (int (__cdecl*)(class v8::Isolate *)) GetProcAddress(v8Module, "?NumberOfHandles@HandleScope@v8@@SAHPAVIsolate@2@@Z");
  return target(param_0);
}

class v8::Local<class v8::Value> v8::Context::GetSecurityToken() {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?GetSecurityToken@Context@v8@@QAE?AV?$Local@VValue@v8@@@2@XZ");
  return target(this);
}

void v8::Context::SetEmbedderData(int param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (void (__thiscall*)(v8::Context*, int, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?SetEmbedderData@Context@v8@@QAEXHV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Local<class v8::Object> v8::Context::Global() {
  static const auto target = (class v8::Local<class v8::Object> (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?Global@Context@v8@@QAE?AV?$Local@VObject@v8@@@2@XZ");
  return target(this);
}

void v8::Function::SetName(class v8::Local<class v8::String> param_0) {
  static const auto target = (void (__thiscall*)(v8::Function*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?SetName@Function@v8@@QAEXV?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::MaybeLocal<class v8::Object> v8::Context::NewRemoteContext(class v8::Isolate * param_0, class v8::Local<class v8::ObjectTemplate> param_1, class v8::MaybeLocal<class v8::Value> param_2) {
  static const auto target = (class v8::MaybeLocal<class v8::Object> (__cdecl*)(class v8::Isolate *, class v8::Local<class v8::ObjectTemplate>, class v8::MaybeLocal<class v8::Value>)) GetProcAddress(v8Module, "?NewRemoteContext@Context@v8@@SA?AV?$MaybeLocal@VObject@v8@@@2@PAVIsolate@2@V?$Local@VObjectTemplate@v8@@@2@V?$MaybeLocal@VValue@v8@@@2@@Z");
  return target(param_0, param_1, param_2);
}

class v8::Local<class v8::Value> v8::Object::CallAsConstructor(int param_0, class v8::Local<class v8::Value> * const param_1) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, int, class v8::Local<class v8::Value> * const)) GetProcAddress(v8Module, "?CallAsConstructor@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@HQAV32@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Array> v8::Object::GetPropertyNames(class v8::Local<class v8::Context> param_0) {
  static const auto target = (class v8::MaybeLocal<class v8::Array> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>)) GetProcAddress(v8Module, "?GetPropertyNames@Object@v8@@QAE?AV?$MaybeLocal@VArray@v8@@@2@V?$Local@VContext@v8@@@2@@Z");
  return target(this, param_0);
}

void v8::Context::SetAlignedPointerInEmbedderData(int param_0, void * param_1) {
  static const auto target = (void (__thiscall*)(v8::Context*, int, void *)) GetProcAddress(v8Module, "?SetAlignedPointerInEmbedderData@Context@v8@@QAEXHPAX@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Array> v8::Object::GetOwnPropertyNames(class v8::Local<class v8::Context> param_0, enum v8::PropertyFilter param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Array> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, enum v8::PropertyFilter)) GetProcAddress(v8Module, "?GetOwnPropertyNames@Object@v8@@QAE?AV?$MaybeLocal@VArray@v8@@@2@V?$Local@VContext@v8@@@2@W4PropertyFilter@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Isolate * v8::Context::GetIsolate() {
  static const auto target = (class v8::Isolate * (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?GetIsolate@Context@v8@@QAEPAVIsolate@2@XZ");
  return target(this);
}

v8::String::Utf8Value::~Utf8Value() {
  static const auto target = (void (__thiscall*)(v8::String::Utf8Value*)) GetProcAddress(v8Module, "??1Utf8Value@String@v8@@QAE@XZ");
  target(this);
}

void v8::Object::SetAccessorProperty(class v8::Local<class v8::Name> param_0, class v8::Local<class v8::Function> param_1, class v8::Local<class v8::Function> param_2, enum v8::PropertyAttribute param_3, enum v8::AccessControl param_4) {
  static const auto target = (void (__thiscall*)(v8::Object*, class v8::Local<class v8::Name>, class v8::Local<class v8::Function>, class v8::Local<class v8::Function>, enum v8::PropertyAttribute, enum v8::AccessControl)) GetProcAddress(v8Module, "?SetAccessorProperty@Object@v8@@QAEXV?$Local@VName@v8@@@2@V?$Local@VFunction@v8@@@2@1W4PropertyAttribute@2@W4AccessControl@2@@Z");
  return target(this, param_0, param_1, param_2, param_3, param_4);
}

class v8::Maybe<bool> v8::Object::CreateDataProperty(class v8::Local<class v8::Context> param_0, unsigned int param_1, class v8::Local<class v8::Value> param_2) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?CreateDataProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@IV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1, param_2);
}

bool v8::Object::Delete(unsigned int param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, unsigned int)) GetProcAddress(v8Module, "?Delete@Object@v8@@QAE_NI@Z");
  return target(this, param_0);
}

void v8::Object::CheckCast(class v8::Value * param_0) {
  static const auto target = (void (__cdecl*)(class v8::Value *)) GetProcAddress(v8Module, "?CheckCast@Object@v8@@CAXPAVValue@2@@Z");
  return target(param_0);
}

class v8::Maybe<bool> v8::Object::Set(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1, class v8::Local<class v8::Value> param_2) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Set@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@1@Z");
  return target(this, param_0, param_1, param_2);
}

void v8::Context::SetErrorMessageForCodeGenerationFromStrings(class v8::Local<class v8::String> param_0) {
  static const auto target = (void (__thiscall*)(v8::Context*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?SetErrorMessageForCodeGenerationFromStrings@Context@v8@@QAEXV?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::MaybeLocal<class v8::Context> v8::Context::FromSnapshot(class v8::Isolate * param_0, unsigned int param_1, struct v8::DeserializeInternalFieldsCallback param_2, class v8::ExtensionConfiguration * param_3, class v8::MaybeLocal<class v8::Value> param_4) {
  static const auto target = (class v8::MaybeLocal<class v8::Context> (__cdecl*)(class v8::Isolate *, unsigned int, struct v8::DeserializeInternalFieldsCallback, class v8::ExtensionConfiguration *, class v8::MaybeLocal<class v8::Value>)) GetProcAddress(v8Module, "?FromSnapshot@Context@v8@@SA?AV?$MaybeLocal@VContext@v8@@@2@PAVIsolate@2@IUDeserializeInternalFieldsCallback@2@PAVExtensionConfiguration@2@V?$MaybeLocal@VValue@v8@@@2@@Z");
  return target(param_0, param_1, param_2, param_3, param_4);
}

class v8::Maybe<bool> v8::Object::Has(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Has@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Value> v8::Object::Get(class v8::Local<class v8::Context> param_0, unsigned int param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int)) GetProcAddress(v8Module, "?Get@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@I@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<bool> v8::Object::HasRealIndexedProperty(class v8::Local<class v8::Context> param_0, unsigned int param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int)) GetProcAddress(v8Module, "?HasRealIndexedProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@I@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<bool> v8::Object::HasPrivate(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Private> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Private>)) GetProcAddress(v8Module, "?HasPrivate@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VPrivate@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

void v8::TryCatch::SetCaptureMessage(bool param_0) {
  static const auto target = (void (__thiscall*)(v8::TryCatch*, bool)) GetProcAddress(v8Module, "?SetCaptureMessage@TryCatch@v8@@QAEX_N@Z");
  return target(this, param_0);
}

class v8::Maybe<bool> v8::Object::DefineOwnProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1, class v8::Local<class v8::Value> param_2, enum v8::PropertyAttribute param_3) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>, class v8::Local<class v8::Value>, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?DefineOwnProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@V?$Local@VValue@v8@@@2@W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2, param_3);
}

class v8::Maybe<bool> v8::Object::HasRealNamedProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?HasRealNamedProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::String> v8::String::NewFromUtf8(class v8::Isolate * param_0, char const * param_1, enum v8::NewStringType param_2, int param_3) {
  static const auto target = (class v8::MaybeLocal<class v8::String> (__cdecl*)(class v8::Isolate *, char const *, enum v8::NewStringType, int)) GetProcAddress(v8Module, "?NewFromUtf8@String@v8@@SA?AV?$MaybeLocal@VString@v8@@@2@PAVIsolate@2@PBDW4NewStringType@2@H@Z");
  return target(param_0, param_1, param_2, param_3);
}

class v8::MaybeLocal<class v8::Value> v8::Object::GetRealNamedPropertyInPrototypeChain(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?GetRealNamedPropertyInPrototypeChain@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

bool v8::TryCatch::HasCaught() const {
  static const auto target = (bool (__thiscall*)(const v8::TryCatch*)) GetProcAddress(v8Module, "?HasCaught@TryCatch@v8@@QBE_NXZ");
  return target(this);
}

class v8::Local<class v8::Value> v8::Object::GetPrototype() {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?GetPrototype@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@XZ");
  return target(this);
}

class v8::Local<class v8::Value> v8::Context::SlowGetEmbedderData(int param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Context*, int)) GetProcAddress(v8Module, "?SlowGetEmbedderData@Context@v8@@AAE?AV?$Local@VValue@v8@@@2@H@Z");
  return target(this, param_0);
}

class v8::Maybe<bool> v8::Object::HasOwnProperty(class v8::Local<class v8::Context> param_0, unsigned int param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int)) GetProcAddress(v8Module, "?HasOwnProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@I@Z");
  return target(this, param_0, param_1);
}

class v8::Local<class v8::Value> v8::Function::Call(class v8::Local<class v8::Value> param_0, int param_1, class v8::Local<class v8::Value> * const param_2) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Function*, class v8::Local<class v8::Value>, int, class v8::Local<class v8::Value> * const)) GetProcAddress(v8Module, "?Call@Function@v8@@QAE?AV?$Local@VValue@v8@@@2@V32@HQAV32@@Z");
  return target(this, param_0, param_1, param_2);
}

class v8::MaybeLocal<class v8::Value> v8::Object::Get(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Get@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::MaybeLocal<class v8::Array> v8::Object::GetPropertyNames(class v8::Local<class v8::Context> param_0, enum v8::KeyCollectionMode param_1, enum v8::PropertyFilter param_2, enum v8::IndexFilter param_3) {
  static const auto target = (class v8::MaybeLocal<class v8::Array> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, enum v8::KeyCollectionMode, enum v8::PropertyFilter, enum v8::IndexFilter)) GetProcAddress(v8Module, "?GetPropertyNames@Object@v8@@QAE?AV?$MaybeLocal@VArray@v8@@@2@V?$Local@VContext@v8@@@2@W4KeyCollectionMode@2@W4PropertyFilter@2@W4IndexFilter@2@@Z");
  return target(this, param_0, param_1, param_2, param_3);
}

class v8::Local<class v8::Value> v8::Object::GetRealNamedPropertyInPrototypeChain(class v8::Local<class v8::String> param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?GetRealNamedPropertyInPrototypeChain@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@V?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Value> v8::Object::CallAsFunction(class v8::Local<class v8::Value> param_0, int param_1, class v8::Local<class v8::Value> * const param_2) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>, int, class v8::Local<class v8::Value> * const)) GetProcAddress(v8Module, "?CallAsFunction@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@V32@HQAV32@@Z");
  return target(this, param_0, param_1, param_2);
}

class v8::Local<class v8::String> v8::Object::GetConstructorName() {
  static const auto target = (class v8::Local<class v8::String> (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?GetConstructorName@Object@v8@@QAE?AV?$Local@VString@v8@@@2@XZ");
  return target(this);
}

void v8::TryCatch::Reset() {
  static const auto target = (void (__thiscall*)(v8::TryCatch*)) GetProcAddress(v8Module, "?Reset@TryCatch@v8@@QAEXXZ");
  return target(this);
}

bool v8::Object::SetAccessor(class v8::Local<class v8::Name> param_0, void (__cdecl*param_1)(class v8::Local<class v8::Name>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*param_2)(class v8::Local<class v8::Name>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::Local<class v8::Value> param_3, enum v8::AccessControl param_4, enum v8::PropertyAttribute param_5) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::Name>, void (__cdecl*)(class v8::Local<class v8::Name>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*)(class v8::Local<class v8::Name>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::Local<class v8::Value>, enum v8::AccessControl, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?SetAccessor@Object@v8@@QAE_NV?$Local@VName@v8@@@2@P6AX0ABV?$PropertyCallbackInfo@VValue@v8@@@2@@ZP6AX0V?$Local@VValue@v8@@@2@ABV?$PropertyCallbackInfo@X@2@@Z3W4AccessControl@2@W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2, param_3, param_4, param_5);
}

void v8::Context::Enter() {
  static const auto target = (void (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?Enter@Context@v8@@QAEXXZ");
  return target(this);
}

class v8::Maybe<bool> v8::Object::Delete(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Delete@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

bool v8::Object::IsCallable() {
  static const auto target = (bool (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?IsCallable@Object@v8@@QAE_NXZ");
  return target(this);
}

int v8::Object::InternalFieldCount() {
  static const auto target = (int (__thiscall*)(v8::Object*)) GetProcAddress(v8Module, "?InternalFieldCount@Object@v8@@QAEHXZ");
  return target(this);
}

bool v8::Object::HasRealNamedProperty(class v8::Local<class v8::String> param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?HasRealNamedProperty@Object@v8@@QAE_NV?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Script> v8::Script::Compile(class v8::Local<class v8::String> param_0, class v8::Local<class v8::String> param_1) {
  static const auto target = (class v8::Local<class v8::Script> (__cdecl*)(class v8::Local<class v8::String>, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?Compile@Script@v8@@SA?AV?$Local@VScript@v8@@@2@V?$Local@VString@v8@@@2@0@Z");
  return target(param_0, param_1);
}

class v8::Maybe<enum v8::PropertyAttribute> v8::Object::GetPropertyAttributes(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1) {
  static const auto target = (class v8::Maybe<enum v8::PropertyAttribute> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?GetPropertyAttributes@Object@v8@@QAE?AV?$Maybe@W4PropertyAttribute@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Maybe<enum v8::PropertyAttribute> v8::Object::GetRealNamedPropertyAttributesInPrototypeChain(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1) {
  static const auto target = (class v8::Maybe<enum v8::PropertyAttribute> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?GetRealNamedPropertyAttributesInPrototypeChain@Object@v8@@QAE?AV?$Maybe@W4PropertyAttribute@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

class v8::Local<class v8::Value> v8::TryCatch::ReThrow() {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::TryCatch*)) GetProcAddress(v8Module, "?ReThrow@TryCatch@v8@@QAE?AV?$Local@VValue@v8@@@2@XZ");
  return target(this);
}

class v8::Maybe<bool> v8::Object::ForceSet(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Value> param_1, class v8::Local<class v8::Value> param_2, enum v8::PropertyAttribute param_3) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Value>, class v8::Local<class v8::Value>, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?ForceSet@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VValue@v8@@@2@1W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2, param_3);
}

v8::String::Utf8Value::Utf8Value(class v8::Local<class v8::Value> param_0) {
  static const auto target = (void (__thiscall*)(v8::String::Utf8Value*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "??0Utf8Value@String@v8@@QAE@V?$Local@VValue@v8@@@2@@Z");
  target(this, param_0);
}

bool v8::Object::Delete(class v8::Local<class v8::Value> param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Delete@Object@v8@@QAE_NV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0);
}

bool v8::Object::SetPrototype(class v8::Local<class v8::Value> param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?SetPrototype@Object@v8@@QAE_NV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Maybe<bool> v8::Object::Delete(class v8::Local<class v8::Context> param_0, unsigned int param_1) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int)) GetProcAddress(v8Module, "?Delete@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@I@Z");
  return target(this, param_0, param_1);
}

class v8::Local<class v8::Function> v8::Function::New(class v8::Isolate * param_0, void (__cdecl*param_1)(class v8::FunctionCallbackInfo<class v8::Value> const &), class v8::Local<class v8::Value> param_2, int param_3) {
  static const auto target = (class v8::Local<class v8::Function> (__cdecl*)(class v8::Isolate *, void (__cdecl*)(class v8::FunctionCallbackInfo<class v8::Value> const &), class v8::Local<class v8::Value>, int)) GetProcAddress(v8Module, "?New@Function@v8@@SA?AV?$Local@VFunction@v8@@@2@PAVIsolate@2@P6AXABV?$FunctionCallbackInfo@VValue@v8@@@2@@ZV?$Local@VValue@v8@@@2@H@Z");
  return target(param_0, param_1, param_2, param_3);
}

class v8::Maybe<bool> v8::Object::Set(class v8::Local<class v8::Context> param_0, unsigned int param_1, class v8::Local<class v8::Value> param_2) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, unsigned int, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?Set@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@IV?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1, param_2);
}

class v8::internal::Object * * v8::HandleScope::CreateHandle(class v8::internal::Isolate * param_0, class v8::internal::Object * param_1) {
  static const auto target = (class v8::internal::Object * * (__cdecl*)(class v8::internal::Isolate *, class v8::internal::Object *)) GetProcAddress(v8Module, "?CreateHandle@HandleScope@v8@@KAPAPAVObject@internal@2@PAVIsolate@42@PAV342@@Z");
  return target(param_0, param_1);
}

class v8::MaybeLocal<class v8::Function> v8::Function::New(class v8::Local<class v8::Context> param_0, void (__cdecl*param_1)(class v8::FunctionCallbackInfo<class v8::Value> const &), class v8::Local<class v8::Value> param_2, int param_3, enum v8::ConstructorBehavior param_4) {
  static const auto target = (class v8::MaybeLocal<class v8::Function> (__cdecl*)(class v8::Local<class v8::Context>, void (__cdecl*)(class v8::FunctionCallbackInfo<class v8::Value> const &), class v8::Local<class v8::Value>, int, enum v8::ConstructorBehavior)) GetProcAddress(v8Module, "?New@Function@v8@@SA?AV?$MaybeLocal@VFunction@v8@@@2@V?$Local@VContext@v8@@@2@P6AXABV?$FunctionCallbackInfo@VValue@v8@@@2@@ZV?$Local@VValue@v8@@@2@HW4ConstructorBehavior@2@@Z");
  return target(param_0, param_1, param_2, param_3, param_4);
}

bool v8::Context::IsCodeGenerationFromStringsAllowed() {
  static const auto target = (bool (__thiscall*)(v8::Context*)) GetProcAddress(v8Module, "?IsCodeGenerationFromStringsAllowed@Context@v8@@QAE_NXZ");
  return target(this);
}

void v8::TryCatch::SetVerbose(bool param_0) {
  static const auto target = (void (__thiscall*)(v8::TryCatch*, bool)) GetProcAddress(v8Module, "?SetVerbose@TryCatch@v8@@QAEX_N@Z");
  return target(this, param_0);
}

class v8::Maybe<bool> v8::Object::SetNativeDataProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1, void (__cdecl*param_2)(class v8::Local<class v8::Name>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*param_3)(class v8::Local<class v8::Name>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::Local<class v8::Value> param_4, enum v8::PropertyAttribute param_5) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>, void (__cdecl*)(class v8::Local<class v8::Name>,class v8::PropertyCallbackInfo<class v8::Value> const &), void (__cdecl*)(class v8::Local<class v8::Name>,class v8::Local<class v8::Value>,class v8::PropertyCallbackInfo<void> const &), class v8::Local<class v8::Value>, enum v8::PropertyAttribute)) GetProcAddress(v8Module, "?SetNativeDataProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@P6AX1ABV?$PropertyCallbackInfo@VValue@v8@@@2@@ZP6AX1V?$Local@VValue@v8@@@2@ABV?$PropertyCallbackInfo@X@2@@Z4W4PropertyAttribute@2@@Z");
  return target(this, param_0, param_1, param_2, param_3, param_4, param_5);
}

class v8::Maybe<bool> v8::Object::CreateDataProperty(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Name> param_1, class v8::Local<class v8::Value> param_2) {
  static const auto target = (class v8::Maybe<bool> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Name>, class v8::Local<class v8::Value>)) GetProcAddress(v8Module, "?CreateDataProperty@Object@v8@@QAE?AV?$Maybe@_N@2@V?$Local@VContext@v8@@@2@V?$Local@VName@v8@@@2@V?$Local@VValue@v8@@@2@@Z");
  return target(this, param_0, param_1, param_2);
}

class v8::Local<class v8::Value> v8::Object::GetOwnPropertyDescriptor(class v8::Local<class v8::Name> param_0) {
  static const auto target = (class v8::Local<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Name>)) GetProcAddress(v8Module, "?GetOwnPropertyDescriptor@Object@v8@@QAE?AV?$Local@VValue@v8@@@2@V?$Local@VName@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Script> v8::Script::Compile(class v8::Local<class v8::String> param_0, class v8::ScriptOrigin * param_1) {
  static const auto target = (class v8::Local<class v8::Script> (__cdecl*)(class v8::Local<class v8::String>, class v8::ScriptOrigin *)) GetProcAddress(v8Module, "?Compile@Script@v8@@SA?AV?$Local@VScript@v8@@@2@V?$Local@VString@v8@@@2@PAVScriptOrigin@2@@Z");
  return target(param_0, param_1);
}

class v8::Maybe<enum v8::PropertyAttribute> v8::Object::GetRealNamedPropertyAttributes(class v8::Local<class v8::String> param_0) {
  static const auto target = (class v8::Maybe<enum v8::PropertyAttribute> (__thiscall*)(v8::Object*, class v8::Local<class v8::String>)) GetProcAddress(v8Module, "?GetRealNamedPropertyAttributes@Object@v8@@QAE?AV?$Maybe@W4PropertyAttribute@v8@@@2@V?$Local@VString@v8@@@2@@Z");
  return target(this, param_0);
}

class v8::MaybeLocal<class v8::Value> v8::Object::GetPrivate(class v8::Local<class v8::Context> param_0, class v8::Local<class v8::Private> param_1) {
  static const auto target = (class v8::MaybeLocal<class v8::Value> (__thiscall*)(v8::Object*, class v8::Local<class v8::Context>, class v8::Local<class v8::Private>)) GetProcAddress(v8Module, "?GetPrivate@Object@v8@@QAE?AV?$MaybeLocal@VValue@v8@@@2@V?$Local@VContext@v8@@@2@V?$Local@VPrivate@v8@@@2@@Z");
  return target(this, param_0, param_1);
}

bool v8::Object::Has(unsigned int param_0) {
  static const auto target = (bool (__thiscall*)(v8::Object*, unsigned int)) GetProcAddress(v8Module, "?Has@Object@v8@@QAE_NI@Z");
  return target(this, param_0);
}

class v8::Local<class v8::Object> v8::Object::New(class v8::Isolate * param_0) {
  static const auto target = (class v8::Local<class v8::Object> (__cdecl*)(class v8::Isolate *)) GetProcAddress(v8Module, "?New@Object@v8@@SA?AV?$Local@VObject@v8@@@2@PAVIsolate@2@@Z");
  return target(param_0);
}

void v8::Function::CheckCast(class v8::Value * param_0) {
  static const auto target = (void (__cdecl*)(class v8::Value *)) GetProcAddress(v8Module, "?CheckCast@Function@v8@@CAXPAVValue@2@@Z");
  return target(param_0);
}

v8::HandleScope::~HandleScope() {
  static const auto target = (void (__thiscall*)(v8::HandleScope*)) GetProcAddress(v8Module, "??1HandleScope@v8@@QAE@XZ");
  target(this);
}

